# Rockchip RK3568 quad core 4GB-8GB GBE PCIe USB3 SATA NVMe
BOARD_NAME="Adakta SMARC rev1"
BOARDFAMILY="rockchip64"
BOARD_MAINTAINER="Adakta Ltd"
BOOTCONFIG="adakta-smarc-rk3568_defconfig"
BOOT_SOC="rk3568"
KERNEL_TARGET="edge,current,vendor"
KERNEL_TEST_TARGET="vendor"
FULL_DESKTOP="yes"
BOOT_LOGO="desktop"
BOOT_FDT_FILE="rockchip/rk3568-adakta-smarc-r1.dtb"
BOOT_SCENARIO="spl-blobs"
IMAGE_PARTITION_TABLE="gpt"
declare -g UEFI_EDK2_BOARD_ID="adakta-smarc" # This _only_ used for uefi-edk2-rk3588 extension

OVERLAY_PREFIX="adakta-smarc"

# Mainline u-boot or Kwiboo's tree
function post_family_config_branch_edge__adakta-smarc_use_mainline_uboot() {
	display_alert "$BOARD" "mainline (next branch) u-boot overrides for $BOARD / $BRANCH" "info"

	declare -g BOOTCONFIG="adakta-smarc-rk3568_rev1_defconfig"            # override the default for the board/family
	declare -g BOOTDELAY=1                                                # Wait for UART interrupt to enter UMS/RockUSB mode etc
	declare -g BOOTSOURCE="https://github.com/bmx666/u-boot-rockchip.git" # We ❤️ Kwiboo's tree
	declare -g BOOTBRANCH="branch:rk3xxx-2024.10-adakta"                  # commit:31522fe7b3c7733313e1c5eb4e340487f6000196 as of 2024-04-01
	declare -g BOOTPATCHDIR="v2024.04-adakta-smarc"                       # empty; defconfig changes are done in hook below
	declare -g BOOTDIR="u-boot-${BOARD}"                                  # do not share u-boot directory
	declare -g UBOOT_TARGET_MAP="BL31=${RKBIN_DIR}/${BL31_BLOB} ROCKCHIP_TPL=${RKBIN_DIR}/${DDR_BLOB};;u-boot-rockchip.bin"
	unset uboot_custom_postprocess write_uboot_platform write_uboot_platform_mtd # disable stuff from rockchip64_common; we're using binman here which does all the work already

	# Just use the binman-provided u-boot-rockchip.bin, which is ready-to-go
	function write_uboot_platform() {
		dd "if=$1/u-boot-rockchip.bin" "of=$2" bs=32k seek=1 conv=notrunc status=none
	}
}

# Mainline u-boot or Kwiboo's tree
function post_family_config_branch_current__adakta-smarc_use_mainline_uboot() {
	display_alert "$BOARD" "mainline (next branch) u-boot overrides for $BOARD / $BRANCH" "info"

	declare -g BOOTCONFIG="adakta-smarc-rk3568_rev1_defconfig"            # override the default for the board/family
	declare -g BOOTDELAY=1                                                # Wait for UART interrupt to enter UMS/RockUSB mode etc
	declare -g BOOTSOURCE="https://github.com/bmx666/u-boot-rockchip.git" # We ❤️ Kwiboo's tree
	declare -g BOOTBRANCH="branch:rk3xxx-2024.10-adakta"                  # commit:31522fe7b3c7733313e1c5eb4e340487f6000196 as of 2024-04-01
	declare -g BOOTPATCHDIR="v2024.04-adakta-smarc"                       # empty; defconfig changes are done in hook below
	declare -g BOOTDIR="u-boot-${BOARD}"                                  # do not share u-boot directory
	declare -g UBOOT_TARGET_MAP="BL31=${RKBIN_DIR}/${BL31_BLOB} ROCKCHIP_TPL=${RKBIN_DIR}/${DDR_BLOB};;u-boot-rockchip.bin"
	unset uboot_custom_postprocess write_uboot_platform write_uboot_platform_mtd # disable stuff from rockchip64_common; we're using binman here which does all the work already

	# Just use the binman-provided u-boot-rockchip.bin, which is ready-to-go
	function write_uboot_platform() {
		dd "if=$1/u-boot-rockchip.bin" "of=$2" bs=32k seek=1 conv=notrunc status=none
	}
}

# Mainline u-boot or Kwiboo's tree
function post_family_config_branch_vendor__adakta-smarc_use_mainline_uboot() {
	display_alert "$BOARD" "mainline (next branch) u-boot overrides for $BOARD / $BRANCH" "info"

	declare -g BOOTCONFIG="adakta-smarc-rk3568_rev1_defconfig"            # override the default for the board/family
	declare -g BOOTDELAY=1                                                # Wait for UART interrupt to enter UMS/RockUSB mode etc
	declare -g BOOTSOURCE="https://github.com/bmx666/u-boot-rockchip.git" # We ❤️ Kwiboo's tree
	declare -g BOOTBRANCH="branch:rk3xxx-2024.10-adakta"                  # commit:31522fe7b3c7733313e1c5eb4e340487f6000196 as of 2024-04-01
	declare -g BOOTPATCHDIR="v2024.04-adakta-smarc"                       # empty; defconfig changes are done in hook below
	declare -g BOOTDIR="u-boot-${BOARD}"                                  # do not share u-boot directory
	declare -g UBOOT_TARGET_MAP="BL31=${RKBIN_DIR}/${BL31_BLOB} ROCKCHIP_TPL=${RKBIN_DIR}/${DDR_BLOB};;u-boot-rockchip.bin"
	unset uboot_custom_postprocess write_uboot_platform write_uboot_platform_mtd # disable stuff from rockchip64_common; we're using binman here which does all the work already

	# Just use the binman-provided u-boot-rockchip.bin, which is ready-to-go
	function write_uboot_platform() {
		dd "if=$1/u-boot-rockchip.bin" "of=$2" bs=32k seek=1 conv=notrunc status=none
	}
}
